{"ast":null,"code":"var _jsxFileName = \"/Users/ibrahimkedir/Documents/GitHub/personal-website-2/src/game/Game.js\",\n  _s = $RefreshSig$();\n// Game.js\nimport React, { useEffect, useState } from 'react';\nimport './Game.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Game = () => {\n  _s();\n  const GAME_PIXEL_COUNT = 40;\n  const SQUARE_OF_GAME_PIXEL_COUNT = Math.pow(GAME_PIXEL_COUNT, 2);\n  let totalFoodAte = 0;\n  let totalDistanceTravelled = 0;\n  const [gameBoardPixels, setGameBoardPixels] = useState(Array(SQUARE_OF_GAME_PIXEL_COUNT).fill(null));\n  const [currentFoodPostion, setCurrentFoodPosition] = useState(0);\n  const [snakeCurrentDirection, setSnakeCurrentDirection] = useState(39); // 39 is the code for RIGHT_DIR\n\n  // ... (The rest of your logic)\n\n  useEffect(() => {\n    // Call the necessary functions to initialize the game\n    createGameBoardPixels();\n    createFood();\n    const moveSnakeInterval = setInterval(moveSnake, 80);\n    return () => clearInterval(moveSnakeInterval); // Cleanup interval on component unmount\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"gameContainer\",\n      children: gameBoardPixels.map((pixel, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `gameBoardPixel ${pixel === 'food' ? 'food' : pixel}`\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"scoreContainer\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"scoreBoard\",\n        children: [\"Food: \", /*#__PURE__*/_jsxDEV(\"span\", {\n          id: \"pointsEarned\",\n          children: totalFoodAte\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"scoreBoard\",\n        children: [\"Blocks: \", /*#__PURE__*/_jsxDEV(\"span\", {\n          id: \"blocksTravelled\",\n          children: totalDistanceTravelled\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 19\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this);\n};\n_s(Game, \"MI/9oQk5j8u9SRysbiiVrP2ncFA=\");\n_c = Game;\nexport default Game;\nvar _c;\n$RefreshReg$(_c, \"Game\");","map":{"version":3,"names":["React","useEffect","useState","jsxDEV","_jsxDEV","Game","_s","GAME_PIXEL_COUNT","SQUARE_OF_GAME_PIXEL_COUNT","Math","pow","totalFoodAte","totalDistanceTravelled","gameBoardPixels","setGameBoardPixels","Array","fill","currentFoodPostion","setCurrentFoodPosition","snakeCurrentDirection","setSnakeCurrentDirection","createGameBoardPixels","createFood","moveSnakeInterval","setInterval","moveSnake","clearInterval","children","id","map","pixel","index","className","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/ibrahimkedir/Documents/GitHub/personal-website-2/src/game/Game.js"],"sourcesContent":["// Game.js\nimport React, { useEffect, useState } from 'react';\nimport './Game.css';\n\nconst Game = () => {\n  const GAME_PIXEL_COUNT = 40;\n  const SQUARE_OF_GAME_PIXEL_COUNT = Math.pow(GAME_PIXEL_COUNT, 2);\n\n  let totalFoodAte = 0;\n  let totalDistanceTravelled = 0;\n\n  const [gameBoardPixels, setGameBoardPixels] = useState(Array(SQUARE_OF_GAME_PIXEL_COUNT).fill(null));\n  const [currentFoodPostion, setCurrentFoodPosition] = useState(0);\n  const [snakeCurrentDirection, setSnakeCurrentDirection] = useState(39); // 39 is the code for RIGHT_DIR\n\n  // ... (The rest of your logic)\n\n  useEffect(() => {\n    // Call the necessary functions to initialize the game\n    createGameBoardPixels();\n    createFood();\n    const moveSnakeInterval = setInterval(moveSnake, 80);\n\n    return () => clearInterval(moveSnakeInterval); // Cleanup interval on component unmount\n  }, []);\n\n  return (\n    <div>\n      <div id=\"gameContainer\">\n        {gameBoardPixels.map((pixel, index) => (\n          <div\n            key={index}\n            className={`gameBoardPixel ${pixel === 'food' ? 'food' : pixel}`}\n          ></div>\n        ))}\n      </div>\n\n      <div id=\"scoreContainer\">\n        <div className=\"scoreBoard\">\n          Food: <span id=\"pointsEarned\">{totalFoodAte}</span>\n        </div>\n        <div className=\"scoreBoard\">\n          Blocks: <span id=\"blocksTravelled\">{totalDistanceTravelled}</span>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Game;\n"],"mappings":";;AAAA;AACA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAO,YAAY;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEpB,MAAMC,IAAI,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACjB,MAAMC,gBAAgB,GAAG,EAAE;EAC3B,MAAMC,0BAA0B,GAAGC,IAAI,CAACC,GAAG,CAACH,gBAAgB,EAAE,CAAC,CAAC;EAEhE,IAAII,YAAY,GAAG,CAAC;EACpB,IAAIC,sBAAsB,GAAG,CAAC;EAE9B,MAAM,CAACC,eAAe,EAAEC,kBAAkB,CAAC,GAAGZ,QAAQ,CAACa,KAAK,CAACP,0BAA0B,CAAC,CAACQ,IAAI,CAAC,IAAI,CAAC,CAAC;EACpG,MAAM,CAACC,kBAAkB,EAAEC,sBAAsB,CAAC,GAAGhB,QAAQ,CAAC,CAAC,CAAC;EAChE,MAAM,CAACiB,qBAAqB,EAAEC,wBAAwB,CAAC,GAAGlB,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAC;;EAExE;;EAEAD,SAAS,CAAC,MAAM;IACd;IACAoB,qBAAqB,CAAC,CAAC;IACvBC,UAAU,CAAC,CAAC;IACZ,MAAMC,iBAAiB,GAAGC,WAAW,CAACC,SAAS,EAAE,EAAE,CAAC;IAEpD,OAAO,MAAMC,aAAa,CAACH,iBAAiB,CAAC,CAAC,CAAC;EACjD,CAAC,EAAE,EAAE,CAAC;EAEN,oBACEnB,OAAA;IAAAuB,QAAA,gBACEvB,OAAA;MAAKwB,EAAE,EAAC,eAAe;MAAAD,QAAA,EACpBd,eAAe,CAACgB,GAAG,CAAC,CAACC,KAAK,EAAEC,KAAK,kBAChC3B,OAAA;QAEE4B,SAAS,EAAG,kBAAiBF,KAAK,KAAK,MAAM,GAAG,MAAM,GAAGA,KAAM;MAAE,GAD5DC,KAAK;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAEN,CACP;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC,eAENhC,OAAA;MAAKwB,EAAE,EAAC,gBAAgB;MAAAD,QAAA,gBACtBvB,OAAA;QAAK4B,SAAS,EAAC,YAAY;QAAAL,QAAA,GAAC,QACpB,eAAAvB,OAAA;UAAMwB,EAAE,EAAC,cAAc;UAAAD,QAAA,EAAEhB;QAAY;UAAAsB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAO,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAChD,CAAC,eACNhC,OAAA;QAAK4B,SAAS,EAAC,YAAY;QAAAL,QAAA,GAAC,UAClB,eAAAvB,OAAA;UAAMwB,EAAE,EAAC,iBAAiB;UAAAD,QAAA,EAAEf;QAAsB;UAAAqB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAO,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC/D,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAAC9B,EAAA,CA3CID,IAAI;AAAAgC,EAAA,GAAJhC,IAAI;AA6CV,eAAeA,IAAI;AAAC,IAAAgC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}