{"ast":null,"code":"var _jsxFileName = \"/Users/ibrahimkedir/Documents/GitHub/personal-website-2/src/pages/snakegame.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport \"../styles/SnakeGame.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SnakeGame = () => {\n  _s();\n  const GAME_PIXEL_COUNT = 40;\n  const SQUARE_OF_GAME_PIXEL_COUNT = Math.pow(GAME_PIXEL_COUNT, 2);\n  const [totalFoodAte, setTotalFoodAte] = useState(0);\n  const [totalDistanceTravelled, setTotalDistanceTravelled] = useState(0);\n  const [currentFoodPosition, setCurrentFoodPosition] = useState(0);\n  const [snakeCurrentDirection, setSnakeCurrentDirection] = useState(39);\n  const [currentSnakeHeadPosition, setCurrentSnakeHeadPosition] = useState(SQUARE_OF_GAME_PIXEL_COUNT / 2);\n  const [snakeLength, setSnakeLength] = useState(1000);\n  const gameBoardRef = useRef(null);\n  useEffect(() => {\n    // Create game board pixels\n    createGameBoardPixels();\n    // Create initial food\n    createFood();\n    // Move snake\n    const moveSnakeInterval = setInterval(moveSnake, 80);\n\n    // Cleanup on unmount\n    return () => clearInterval(moveSnakeInterval);\n  }, []);\n  useEffect(() => {\n    // Handle keydown event\n    const handleKeyDown = e => changeDirection(e.keyCode);\n    window.addEventListener(\"keydown\", handleKeyDown);\n    // Cleanup on unmount\n    return () => window.removeEventListener(\"keydown\", handleKeyDown);\n  }, [changeDirection]);\n  const createGameBoardPixels = () => {\n    const gamePixelDivs = Array.from({\n      length: SQUARE_OF_GAME_PIXEL_COUNT\n    }, (_, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"gameBoardPixel\",\n      id: `pixel${index + 1}`\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this));\n    gameBoardRef.current.innerHTML = gamePixelDivs;\n  };\n  const createFood = () => {\n    gameBoardRef.current.children[currentFoodPosition].classList.remove(\"food\");\n    const newFoodPosition = Math.floor(Math.random() * SQUARE_OF_GAME_PIXEL_COUNT);\n    setCurrentFoodPosition(newFoodPosition);\n    gameBoardRef.current.children[newFoodPosition].classList.add(\"food\");\n  };\n  const changeDirection = newDirectionCode => {\n    if (newDirectionCode === snakeCurrentDirection) return;\n    if (newDirectionCode === 37 && snakeCurrentDirection !== 39) {\n      setSnakeCurrentDirection(newDirectionCode);\n    } else if (newDirectionCode === 38 && snakeCurrentDirection !== 40) {\n      setSnakeCurrentDirection(newDirectionCode);\n    } else if (newDirectionCode === 39 && snakeCurrentDirection !== 37) {\n      setSnakeCurrentDirection(newDirectionCode);\n    } else if (newDirectionCode === 40 && snakeCurrentDirection !== 38) {\n      setSnakeCurrentDirection(newDirectionCode);\n    }\n  };\n  const moveSnake = () => {\n    // Snake movement logic...\n\n    // Update total distance travelled\n    setTotalDistanceTravelled(prev => prev + 1);\n    if (currentSnakeHeadPosition === currentFoodPosition) {\n      // Update total food ate\n      setTotalFoodAte(prev => prev + 1);\n      // Increase Snake length:\n      setSnakeLength(prev => prev + 100);\n      createFood();\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"gameContainer\",\n      ref: gameBoardRef\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"scoreContainer\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"scoreBoard\",\n        children: [\"Food: \", /*#__PURE__*/_jsxDEV(\"span\", {\n          id: \"pointsEarned\",\n          children: totalFoodAte\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 43\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"scoreBoard\",\n        children: [\"Blocks: \", /*#__PURE__*/_jsxDEV(\"span\", {\n          id: \"blocksTravelled\",\n          children: totalDistanceTravelled\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 45\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"onScreenControllers\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => changeDirection(37),\n        children: \"\\u25C0\\uFE0F\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => changeDirection(38),\n          children: \"\\uD83D\\uDD3C\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => changeDirection(40),\n          children: \"\\uD83D\\uDD3D\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => changeDirection(39),\n        children: \"\\u25B6\\uFE0F\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"developerDetails\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 82,\n    columnNumber: 5\n  }, this);\n};\n_s(SnakeGame, \"Qdg7mIX8mrpKuXlYcIPr7boqx94=\");\n_c = SnakeGame;\nexport default SnakeGame;\nvar _c;\n$RefreshReg$(_c, \"SnakeGame\");","map":{"version":3,"names":["React","useState","useEffect","useRef","jsxDEV","_jsxDEV","SnakeGame","_s","GAME_PIXEL_COUNT","SQUARE_OF_GAME_PIXEL_COUNT","Math","pow","totalFoodAte","setTotalFoodAte","totalDistanceTravelled","setTotalDistanceTravelled","currentFoodPosition","setCurrentFoodPosition","snakeCurrentDirection","setSnakeCurrentDirection","currentSnakeHeadPosition","setCurrentSnakeHeadPosition","snakeLength","setSnakeLength","gameBoardRef","createGameBoardPixels","createFood","moveSnakeInterval","setInterval","moveSnake","clearInterval","handleKeyDown","e","changeDirection","keyCode","window","addEventListener","removeEventListener","gamePixelDivs","Array","from","length","_","index","className","id","fileName","_jsxFileName","lineNumber","columnNumber","current","innerHTML","children","classList","remove","newFoodPosition","floor","random","add","newDirectionCode","prev","ref","onClick","_c","$RefreshReg$"],"sources":["/Users/ibrahimkedir/Documents/GitHub/personal-website-2/src/pages/snakegame.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\nimport \"../styles/SnakeGame.css\";\n\nconst SnakeGame = () => {\n  const GAME_PIXEL_COUNT = 40;\n  const SQUARE_OF_GAME_PIXEL_COUNT = Math.pow(GAME_PIXEL_COUNT, 2);\n\n  const [totalFoodAte, setTotalFoodAte] = useState(0);\n  const [totalDistanceTravelled, setTotalDistanceTravelled] = useState(0);\n  const [currentFoodPosition, setCurrentFoodPosition] = useState(0);\n  const [snakeCurrentDirection, setSnakeCurrentDirection] = useState(39);\n  const [currentSnakeHeadPosition, setCurrentSnakeHeadPosition] = useState(SQUARE_OF_GAME_PIXEL_COUNT / 2);\n  const [snakeLength, setSnakeLength] = useState(1000);\n\n  const gameBoardRef = useRef(null);\n\n  useEffect(() => {\n    // Create game board pixels\n    createGameBoardPixels();\n    // Create initial food\n    createFood();\n    // Move snake\n    const moveSnakeInterval = setInterval(moveSnake, 80);\n    \n    // Cleanup on unmount\n    return () => clearInterval(moveSnakeInterval);\n  }, []);\n\n  useEffect(() => {\n    // Handle keydown event\n    const handleKeyDown = (e) => changeDirection(e.keyCode);\n    window.addEventListener(\"keydown\", handleKeyDown);\n    // Cleanup on unmount\n    return () => window.removeEventListener(\"keydown\", handleKeyDown);\n  }, [changeDirection]);\n\n  const createGameBoardPixels = () => {\n    const gamePixelDivs = Array.from({ length: SQUARE_OF_GAME_PIXEL_COUNT }, (_, index) => (\n      <div key={index} className=\"gameBoardPixel\" id={`pixel${index + 1}`}></div>\n    ));\n    gameBoardRef.current.innerHTML = gamePixelDivs;\n  };\n\n  const createFood = () => {\n    gameBoardRef.current.children[currentFoodPosition].classList.remove(\"food\");\n\n    const newFoodPosition = Math.floor(Math.random() * SQUARE_OF_GAME_PIXEL_COUNT);\n    setCurrentFoodPosition(newFoodPosition);\n    gameBoardRef.current.children[newFoodPosition].classList.add(\"food\");\n  };\n\n  const changeDirection = (newDirectionCode) => {\n    if (newDirectionCode === snakeCurrentDirection) return;\n\n    if (newDirectionCode === 37 && snakeCurrentDirection !== 39) {\n      setSnakeCurrentDirection(newDirectionCode);\n    } else if (newDirectionCode === 38 && snakeCurrentDirection !== 40) {\n      setSnakeCurrentDirection(newDirectionCode);\n    } else if (newDirectionCode === 39 && snakeCurrentDirection !== 37) {\n      setSnakeCurrentDirection(newDirectionCode);\n    } else if (newDirectionCode === 40 && snakeCurrentDirection !== 38) {\n      setSnakeCurrentDirection(newDirectionCode);\n    }\n  };\n\n  const moveSnake = () => {\n    // Snake movement logic...\n\n    // Update total distance travelled\n    setTotalDistanceTravelled((prev) => prev + 1);\n\n    if (currentSnakeHeadPosition === currentFoodPosition) {\n      // Update total food ate\n      setTotalFoodAte((prev) => prev + 1);\n      // Increase Snake length:\n      setSnakeLength((prev) => prev + 100);\n      createFood();\n    }\n  };\n\n  return (\n    <div>\n      <div id=\"gameContainer\" ref={gameBoardRef}></div>\n\n      <div id=\"scoreContainer\">\n        <div className=\"scoreBoard\">Food: <span id=\"pointsEarned\">{totalFoodAte}</span></div>\n        <div className=\"scoreBoard\">Blocks: <span id=\"blocksTravelled\">{totalDistanceTravelled}</span></div>\n      </div>\n\n      <div id=\"onScreenControllers\">\n        <button onClick={() => changeDirection(37)}>◀️</button>\n        <div>\n          <button onClick={() => changeDirection(38)}>🔼</button>\n          <button onClick={() => changeDirection(40)}>🔽</button>\n        </div>\n        <button onClick={() => changeDirection(39)}>▶️</button>\n      </div>\n\n      <div className=\"developerDetails\">\n        {/* Developer details... */}\n      </div>\n    </div>\n  );\n};\n\nexport default SnakeGame;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}