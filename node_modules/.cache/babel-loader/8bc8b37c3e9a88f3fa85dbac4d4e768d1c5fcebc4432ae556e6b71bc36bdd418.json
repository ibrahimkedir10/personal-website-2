{"ast":null,"code":"var _jsxFileName = \"/Users/ibrahimkedir/Documents/GitHub/personal-website-2/src/game/snakes.js\",\n  _s = $RefreshSig$();\n// SnakeGame.js\nimport React, { useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SnakeGame = () => {\n  _s();\n  useEffect(() => {\n    const GAME_PIXEL_COUNT = 40;\n    const SQUARE_OF_GAME_PIXEL_COUNT = Math.pow(GAME_PIXEL_COUNT, 2);\n    let totalFoodAte = 0;\n    let totalDistanceTravelled = 0;\n    const gameContainer = document.getElementById(\"gameContainer\");\n    const createGameBoardPixels = () => {\n      let gamePixelDivs = \"\";\n      for (let i = 1; i <= SQUARE_OF_GAME_PIXEL_COUNT; ++i) {\n        gamePixelDivs = `${gamePixelDivs} <div class=\"gameBoardPixel\" id=\"pixel${i}\"></div>`;\n      }\n      gameContainer.innerHTML = `${gameContainer.innerHTML} ${gamePixelDivs}`;\n    };\n    const gameBoardPixels = document.getElementsByClassName(\"gameBoardPixel\");\n    let currentFoodPostion = 0;\n    const createFood = () => {\n      gameBoardPixels[currentFoodPostion].classList.remove(\"food\");\n      currentFoodPostion = Math.random();\n      currentFoodPostion = Math.floor(currentFoodPostion * SQUARE_OF_GAME_PIXEL_COUNT);\n      gameBoardPixels[currentFoodPostion].classList.add(\"food\");\n    };\n    let currentSnakeHeadPosition = SQUARE_OF_GAME_PIXEL_COUNT / 2;\n    let snakeLength = 1000;\n    let snakeCurrentDirection = 39;\n    const changeDirection = newDirectionCode => {\n      if (newDirectionCode === snakeCurrentDirection) return;\n      if (newDirectionCode === 37 && snakeCurrentDirection !== 39) {\n        snakeCurrentDirection = newDirectionCode;\n      } else if (newDirectionCode === 38 && snakeCurrentDirection !== 40) {\n        snakeCurrentDirection = newDirectionCode;\n      } else if (newDirectionCode === 39 && snakeCurrentDirection !== 37) {\n        snakeCurrentDirection = newDirectionCode;\n      } else if (newDirectionCode === 40 && snakeCurrentDirection !== 38) {\n        snakeCurrentDirection = newDirectionCode;\n      }\n    };\n    const moveSnake = () => {\n      // Your existing moveSnake function goes here...\n    };\n    let moveSnakeInterval = setInterval(moveSnake, 80);\n    const onKeyDown = e => {\n      changeDirection(e.keyCode);\n    };\n    document.addEventListener(\"keydown\", onKeyDown);\n    return () => {\n      clearInterval(moveSnakeInterval);\n      document.removeEventListener(\"keydown\", onKeyDown);\n    };\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"gameContainer\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"scoreContainer\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"scoreBoard\",\n        children: [\"Food: \", /*#__PURE__*/_jsxDEV(\"span\", {\n          id: \"pointsEarned\",\n          children: \"0\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"scoreBoard\",\n        children: [\"Blocks: \", /*#__PURE__*/_jsxDEV(\"span\", {\n          id: \"blocksTravelled\",\n          children: \"0\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 19\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 69,\n    columnNumber: 5\n  }, this);\n};\n_s(SnakeGame, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n_c = SnakeGame;\nexport default SnakeGame;\nvar _c;\n$RefreshReg$(_c, \"SnakeGame\");","map":{"version":3,"names":["React","useEffect","jsxDEV","_jsxDEV","SnakeGame","_s","GAME_PIXEL_COUNT","SQUARE_OF_GAME_PIXEL_COUNT","Math","pow","totalFoodAte","totalDistanceTravelled","gameContainer","document","getElementById","createGameBoardPixels","gamePixelDivs","i","innerHTML","gameBoardPixels","getElementsByClassName","currentFoodPostion","createFood","classList","remove","random","floor","add","currentSnakeHeadPosition","snakeLength","snakeCurrentDirection","changeDirection","newDirectionCode","moveSnake","moveSnakeInterval","setInterval","onKeyDown","e","keyCode","addEventListener","clearInterval","removeEventListener","children","id","fileName","_jsxFileName","lineNumber","columnNumber","className","_c","$RefreshReg$"],"sources":["/Users/ibrahimkedir/Documents/GitHub/personal-website-2/src/game/snakes.js"],"sourcesContent":["// SnakeGame.js\nimport React, { useEffect } from \"react\";\n\nconst SnakeGame = () => {\n  useEffect(() => {\n    const GAME_PIXEL_COUNT = 40;\n    const SQUARE_OF_GAME_PIXEL_COUNT = Math.pow(GAME_PIXEL_COUNT, 2);\n\n    let totalFoodAte = 0;\n    let totalDistanceTravelled = 0;\n\n    const gameContainer = document.getElementById(\"gameContainer\");\n\n    const createGameBoardPixels = () => {\n      let gamePixelDivs = \"\";\n      for (let i = 1; i <= SQUARE_OF_GAME_PIXEL_COUNT; ++i) {\n        gamePixelDivs = `${gamePixelDivs} <div class=\"gameBoardPixel\" id=\"pixel${i}\"></div>`;\n      }\n      gameContainer.innerHTML = `${gameContainer.innerHTML} ${gamePixelDivs}`;\n    };\n\n    const gameBoardPixels = document.getElementsByClassName(\"gameBoardPixel\");\n\n    let currentFoodPostion = 0;\n    const createFood = () => {\n      gameBoardPixels[currentFoodPostion].classList.remove(\"food\");\n      currentFoodPostion = Math.random();\n      currentFoodPostion = Math.floor(currentFoodPostion * SQUARE_OF_GAME_PIXEL_COUNT);\n      gameBoardPixels[currentFoodPostion].classList.add(\"food\");\n    };\n\n    let currentSnakeHeadPosition = SQUARE_OF_GAME_PIXEL_COUNT / 2;\n    let snakeLength = 1000;\n    let snakeCurrentDirection = 39;\n\n    const changeDirection = (newDirectionCode) => {\n      if (newDirectionCode === snakeCurrentDirection) return;\n\n      if (newDirectionCode === 37 && snakeCurrentDirection !== 39) {\n        snakeCurrentDirection = newDirectionCode;\n      } else if (newDirectionCode === 38 && snakeCurrentDirection !== 40) {\n        snakeCurrentDirection = newDirectionCode;\n      } else if (newDirectionCode === 39 && snakeCurrentDirection !== 37) {\n        snakeCurrentDirection = newDirectionCode;\n      } else if (newDirectionCode === 40 && snakeCurrentDirection !== 38) {\n        snakeCurrentDirection = newDirectionCode;\n      }\n    };\n\n    const moveSnake = () => {\n      // Your existing moveSnake function goes here...\n    };\n\n    let moveSnakeInterval = setInterval(moveSnake, 80);\n\n    const onKeyDown = (e) => {\n      changeDirection(e.keyCode);\n    };\n\n    document.addEventListener(\"keydown\", onKeyDown);\n\n    return () => {\n      clearInterval(moveSnakeInterval);\n      document.removeEventListener(\"keydown\", onKeyDown);\n    };\n  }, []);\n\n  return (\n    <div>\n      {/* Snake game HTML elements go here (HTML from your existing Snake game) */}\n      <div id=\"gameContainer\"></div>\n      <div id=\"scoreContainer\">\n        <div className=\"scoreBoard\">\n          Food: <span id=\"pointsEarned\">0</span>\n        </div>\n        <div className=\"scoreBoard\">\n          Blocks: <span id=\"blocksTravelled\">0</span>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default SnakeGame;\n"],"mappings":";;AAAA;AACA,OAAOA,KAAK,IAAIC,SAAS,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEzC,MAAMC,SAAS,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACtBJ,SAAS,CAAC,MAAM;IACd,MAAMK,gBAAgB,GAAG,EAAE;IAC3B,MAAMC,0BAA0B,GAAGC,IAAI,CAACC,GAAG,CAACH,gBAAgB,EAAE,CAAC,CAAC;IAEhE,IAAII,YAAY,GAAG,CAAC;IACpB,IAAIC,sBAAsB,GAAG,CAAC;IAE9B,MAAMC,aAAa,GAAGC,QAAQ,CAACC,cAAc,CAAC,eAAe,CAAC;IAE9D,MAAMC,qBAAqB,GAAGA,CAAA,KAAM;MAClC,IAAIC,aAAa,GAAG,EAAE;MACtB,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,IAAIV,0BAA0B,EAAE,EAAEU,CAAC,EAAE;QACpDD,aAAa,GAAI,GAAEA,aAAc,yCAAwCC,CAAE,UAAS;MACtF;MACAL,aAAa,CAACM,SAAS,GAAI,GAAEN,aAAa,CAACM,SAAU,IAAGF,aAAc,EAAC;IACzE,CAAC;IAED,MAAMG,eAAe,GAAGN,QAAQ,CAACO,sBAAsB,CAAC,gBAAgB,CAAC;IAEzE,IAAIC,kBAAkB,GAAG,CAAC;IAC1B,MAAMC,UAAU,GAAGA,CAAA,KAAM;MACvBH,eAAe,CAACE,kBAAkB,CAAC,CAACE,SAAS,CAACC,MAAM,CAAC,MAAM,CAAC;MAC5DH,kBAAkB,GAAGb,IAAI,CAACiB,MAAM,CAAC,CAAC;MAClCJ,kBAAkB,GAAGb,IAAI,CAACkB,KAAK,CAACL,kBAAkB,GAAGd,0BAA0B,CAAC;MAChFY,eAAe,CAACE,kBAAkB,CAAC,CAACE,SAAS,CAACI,GAAG,CAAC,MAAM,CAAC;IAC3D,CAAC;IAED,IAAIC,wBAAwB,GAAGrB,0BAA0B,GAAG,CAAC;IAC7D,IAAIsB,WAAW,GAAG,IAAI;IACtB,IAAIC,qBAAqB,GAAG,EAAE;IAE9B,MAAMC,eAAe,GAAIC,gBAAgB,IAAK;MAC5C,IAAIA,gBAAgB,KAAKF,qBAAqB,EAAE;MAEhD,IAAIE,gBAAgB,KAAK,EAAE,IAAIF,qBAAqB,KAAK,EAAE,EAAE;QAC3DA,qBAAqB,GAAGE,gBAAgB;MAC1C,CAAC,MAAM,IAAIA,gBAAgB,KAAK,EAAE,IAAIF,qBAAqB,KAAK,EAAE,EAAE;QAClEA,qBAAqB,GAAGE,gBAAgB;MAC1C,CAAC,MAAM,IAAIA,gBAAgB,KAAK,EAAE,IAAIF,qBAAqB,KAAK,EAAE,EAAE;QAClEA,qBAAqB,GAAGE,gBAAgB;MAC1C,CAAC,MAAM,IAAIA,gBAAgB,KAAK,EAAE,IAAIF,qBAAqB,KAAK,EAAE,EAAE;QAClEA,qBAAqB,GAAGE,gBAAgB;MAC1C;IACF,CAAC;IAED,MAAMC,SAAS,GAAGA,CAAA,KAAM;MACtB;IAAA,CACD;IAED,IAAIC,iBAAiB,GAAGC,WAAW,CAACF,SAAS,EAAE,EAAE,CAAC;IAElD,MAAMG,SAAS,GAAIC,CAAC,IAAK;MACvBN,eAAe,CAACM,CAAC,CAACC,OAAO,CAAC;IAC5B,CAAC;IAEDzB,QAAQ,CAAC0B,gBAAgB,CAAC,SAAS,EAAEH,SAAS,CAAC;IAE/C,OAAO,MAAM;MACXI,aAAa,CAACN,iBAAiB,CAAC;MAChCrB,QAAQ,CAAC4B,mBAAmB,CAAC,SAAS,EAAEL,SAAS,CAAC;IACpD,CAAC;EACH,CAAC,EAAE,EAAE,CAAC;EAEN,oBACEjC,OAAA;IAAAuC,QAAA,gBAEEvC,OAAA;MAAKwC,EAAE,EAAC;IAAe;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM,CAAC,eAC9B5C,OAAA;MAAKwC,EAAE,EAAC,gBAAgB;MAAAD,QAAA,gBACtBvC,OAAA;QAAK6C,SAAS,EAAC,YAAY;QAAAN,QAAA,GAAC,QACpB,eAAAvC,OAAA;UAAMwC,EAAE,EAAC,cAAc;UAAAD,QAAA,EAAC;QAAC;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAM,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACnC,CAAC,eACN5C,OAAA;QAAK6C,SAAS,EAAC,YAAY;QAAAN,QAAA,GAAC,UAClB,eAAAvC,OAAA;UAAMwC,EAAE,EAAC,iBAAiB;UAAAD,QAAA,EAAC;QAAC;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAM,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACxC,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAAC1C,EAAA,CA9EID,SAAS;AAAA6C,EAAA,GAAT7C,SAAS;AAgFf,eAAeA,SAAS;AAAC,IAAA6C,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}